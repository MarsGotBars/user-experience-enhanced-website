/* MARK: Exercise dialog
 */
main:has(form.dialog) {
  margin-bottom: 3rem;
}
 form.dialog {
  display: flex;
  flex-direction: column;
  height: 100%;
  header {
    width: 100%;
    position: relative;
    .dialog-title {
      font-style: italic;
      font-weight: 700;
      font-size: clamp(1rem, 3vw, 2.5rem);
      padding: 1rem 1.5rem;
      background: #363636;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0.5rem;
    }

    .close {
      position: absolute;
      top: 1rem;
      right: 1.5rem;
    }
  }
  .error {
    padding: 0 2.125rem;
  }
  h2 {
    padding: 0 2.125rem;
    margin-top: 2.25rem;
  }
  label {
    gap: 2.5rem;
    display: flex;
    flex-direction: column;
    padding: 0 2.125rem;
    align-items: start;
    cursor: text;
    &:has(input[type="checkbox"]) {
      cursor: pointer;
      flex-direction: row;
      align-items: center;
      gap: 1rem;
    }

    @supports (display: grid) {
      input[type="checkbox"] {
        appearance: none;
        position: absolute;
        &:focus {
          outline: none;
        }
      }

      input[type="checkbox"]:focus + .fake-checkbox {
        outline: 5px dotted var(--theme);
      }

      .fake-checkbox {
        width: 1rem;
        height: 1rem;
        border-radius: 0.25rem;
        border: 2px solid var(--gray);
        display: grid;
        place-content: center;
        transition: 0.3s ease;

        svg {
          /* fill: none; */
          margin: 0;
          height: 0.5rem;
          path {
            stroke: none;
          }
        }
      }

      input[type="checkbox"]:checked + .fake-checkbox {
        background: var(--theme);
        svg {
          path {
            stroke: var(--white);
          }
        }
      }
    }
    .concept-text {
      color: var(--gray);
      font-size: var(--size-default);
      font-weight: 400;
      margin-bottom: 0.5rem;
    }
  }

  .submission-container {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
  }

  textarea {
    width: 100%;
    height: 210px;
    color: var(--white);
    background: var(--black);
    border: none;
    resize: none;
    border-radius: 1.75rem;
    padding: 1.5rem;
  }
}

dialog {
  background: var(--black);
  overflow: hidden;
  --offset: 25vh;
  border: none;
  border-radius: 1rem 1rem 0 0;
  position: fixed;
  top: var(--offset);
  max-width: 100vw;
  transition: 0.5s ease-out;
  @media screen and (min-width: 760px) {
    top: calc(var(--offset) / 2);
    max-width: 660px;
    border-radius: 1rem;
  }
  height: calc(100vh - var(--offset));
  width: 100%;
  margin: 0 auto;
  /* nodig aangezien de default ingesteld staaat als max-width: calc(100% - 2em - 6px); */
  /* max-width: 100vw; */
  button {
    background: unset;
    border: unset;
  }

  &[open]:not(.fade-out) {
    animation: fadeIn 0.5s ease-out forwards;
  }

  svg {
    /* optische fix */
    margin-left: 0.375rem;
    width: 1rem;
    height: 100%;
  }

  form.dialog textarea {
    color: var(--white);
    background: var(--off-black);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* standaard backdrop, voor het geval ik hier ooit iets mee wil doen */
dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
}
/* Exercise dialog end */

dialog.fade-out {
  animation: fadeOut 0.5s ease-out forwards;
}
dialog.fade-out::backdrop {
  background: rgba(0, 0, 0, 0.5);
}
form.dialog::after {
  content: "";
  display: block;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--off-black);
  pointer-events: none;
  z-index: 2;
}

form.dialog::after,
form.dialog svg {
  transition: 0.5s ease-out;
}

form.dialog svg {
  transition-delay: 0.2s;
}
.loading-container {
  z-index: 5;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
}

form.dialog .loading-container svg {
  margin: 0;
  height: 5rem;
  width: unset;
  aspect-ratio: 1;
}

form.dialog .loading-container svg.loading-icon {
  animation: loadingSpin 2s cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite;
}

form.dialog .loading-container,
form.dialog .loading-container p.loading-text,
form.dialog .loading-container p.success-text,
form.dialog .loading-container p.error-text,
form.dialog .loading-container svg.loading-icon,
form.dialog .loading-container svg.checkmark-icon,
form.dialog .loading-container svg.cross-icon {
  opacity: 0;
  pointer-events: none;
  position: absolute;
}

form.dialog.loading .loading-container p.loading-text,
form.dialog.success .loading-container p.success-text,
form.dialog.error .loading-container p.error-text,
form.dialog.loading .loading-container svg.loading-icon,
form.dialog.success .loading-container svg.checkmark-icon,
form.dialog.error .loading-container svg.cross-icon {
  opacity: 1;
  pointer-events: auto;
  position: initial;
}

form.dialog.loading .loading-container,
form.dialog.error .loading-container,
form.dialog.success .loading-container {
  opacity: 1;
}

form.dialog.loading::after,
form.dialog.success::after,
form.dialog.error::after {
  opacity: 1;
  pointer-events: auto;
}

@keyframes loadingSpin {
  to {
    transform: rotate(360deg);
  }
}
